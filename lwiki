#!/bin/bash

#------------------------------------------------------------------------------
# from mshex/functions/hdirname.sh

function hdirname/readlink {
  local path="$1"
  case "$OSTYPE" in
  (cygwin|linux-gnu)
    PATH=/bin:/usr/bin readlink -f "$path" ;;
  (darwin*|*)
    local PWD="$PWD" OLDPWD="$OLDPWD"
    while [[ -h $path ]]; do
      local link="$(PATH=/bin:/usr/bin readlink "$path" || true)"
      [[ $link ]] || break

      if [[ $link = /* || $path != */* ]]; then
        path="$link"
      else
        local dir="${path%/*}"
        path="${dir%/}/$link"
      fi
    done
    echo -n "$path" ;;
  esac
}

function hdirname {
  if [[ $1 == -v ]]; then
    eval '
      '$2'="$3"
      [[ -h ${'$2'} ]] && '$2'=$(hdirname/readlink "${'$2'}")

      if [[ ${'$2'} == */* ]]; then
        '$2'="${'$2'%/*}"
        : "${'$2':=/}"
      else
        '$2'="${4-$PWD}"
      fi
    '
  elif [[ $1 == -v* ]]; then
    hdirname -v "${1:2}" "${@:2}"
  else
    local ret
    hdirname -v ret "$@"
    echo -n "$ret"
  fi
}
#------------------------------------------------------------------------------

hdirname -v LWIKIPATH "$0"

function convert {
  php "$LWIKIPATH/lwiki-convert" "$@"
}

function command.view {
  convert "$@" | w3m -T text/html
}

# function command.links {
#   ftmp="$(mktemp XXXXXXXXXX.htm)"
#   convert "$@" > "$ftmp"
#   links  -html-assume-codepage utf-8 "$ftmp"
#   rm -f "$ftmp"
# }

function command.convert {
  convert "$@"
}


function command.init {
  local base=$(cd -P $LWIKIPATH; echo -n $PWD)

  if [[ -d .data && -d .lock && -d res && -h index.php && -h .lib ]]; then
    echo "lwiki-init: Updating old type lwiki directory..."
    mkdir .lwiki
    mv .data .lwiki/data
    mv .lock .lwiki/lock
    mv .lib .lwiki/lib
    echo "lwiki-init: done"
    return 0
  fi

  if [[ -d .lwiki ]]; then
    echo "lwiki-init: The subdirectory \`.lwiki' already exists!" >&2
    echo "lwiki-init: This directory may be already a lwiki directory." >&2
    echo "lwiki-init: Failed to initialize the lwiki directory." >&2
    return 1
  fi

  if [[ -e index.php || -e res ]]; then
    echo "lwiki-init: The file index.php or res already exists!" >&2
    echo "lwiki-init: Failed to initialize the lwiki directory." >&2
    return 1
  fi

  mkdir -p .lwiki/data .lwiki/lock
  ln -s "$base/res" res
  ln -s "$base/lib" .lwiki/lib
  ln -s "$base/index.php" index.php

  echo "lwiki-init: changing owner group of .lwiki/data and .lwiki/lock to \`apache'..."
  chmod 775 .lwiki/data .lwiki/lock
  sudo chown :apache .lwiki/data .lwiki/lock
  sudo chcon -R -t httpd_sys_rw_content_t .lwiki/lock .lwiki/data
  echo "lwiki-init: done"
}

function command.archive {
  if [[ ! -d .lwiki ]]; then
    echo "lwiki-save: this is not a lwiki directory." >&2
    return 1
  fi

  (
    cd .lwiki/data
    tar caf ../../"${1:-data}".$(date +%Y%m%d).tar.xz *
  )
}


if [[ ! $1 ]]; then
  echo "lwiki: operation not specified" >&2
  exit 1
fi
name="$1"
shift 1

if ! declare -f "command.$name" &> /dev/null; then
  echo "lwiki: unrecognized operation: '$name'" >&2
  exit 1
fi

"command.$name" "$@"
